name: build

on:
  workflow_dispatch:
  push:
    branches:
      - master

jobs:

  # binary build
  build:

    name: Build - ${{ matrix.job.name }}
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        job:
          - { name: "amd64",   target: "x86_64-unknown-linux-musl" }
          - { name: "arm64v8", target: "aarch64-unknown-linux-musl" }
          - { name: "armv7",   target: "armv7-unknown-linux-musleabihf" }
          - { name: "i386",    target: "i686-unknown-linux-musl" }

    steps:
      
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          default: true
          target: ${{ matrix.job.target }}

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --all-features --target=${{ matrix.job.target }}
          use-cross: true  

      - name: Run tests
        run: cargo test --verbose

      - name: Publish Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: binaries-${{ matrix.job.name }}
          path: |
            target/${{ matrix.job.target }}/release/hbbr
            target/${{ matrix.job.target }}/release/hbbs
            target/${{ matrix.job.target }}/release/rustdesk-utils
          if-no-files-found: error

  #Â github (draft) release with all binaries
  release:

    name: Github release
    needs: build
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        job:
          - { name: "amd64" }
          - { name: "arm64v8" }
          - { name: "armv7" }
          - { name: "i386" }

    steps:

      - name: Download binaries (${{ matrix.job.name }})
        uses: actions/download-artifact@v3
        with:
          name: binaries-${{ matrix.job.name }}
          path: ${{ matrix.job.name }}

      - name: Pack files (${{ matrix.job.name }})
        run: |
          sudo apt update
          DEBIAN_FRONTEND=noninteractive sudo apt install -y zip
          zip ${{ matrix.job.name }}/rustdesk-server-linux-${{ matrix.job.name }}.zip ${{ matrix.job.name }}/hbbr ${{ matrix.job.name }}/hbbs ${{ matrix.job.name }}/rustdesk-utils

      - name: Create Release (${{ matrix.job.name }})
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          files: ${{ matrix.job.name }}/rustdesk-server-linux-${{ matrix.job.name }}.zip
            
